### YamlMime:ManagedReference
items:
- uid: Sharpie.KeySequenceResolver
  commentId: T:Sharpie.KeySequenceResolver
  id: KeySequenceResolver
  parent: Sharpie
  children:
  - Sharpie.KeySequenceResolver.AltKeyResolver(System.Collections.Generic.IReadOnlyList{Sharpie.KeyEvent})
  - Sharpie.KeySequenceResolver.ControlKeyResolver(System.Collections.Generic.IReadOnlyList{Sharpie.KeyEvent})
  - Sharpie.KeySequenceResolver.KeyPadModifiersResolver(System.Collections.Generic.IReadOnlyList{Sharpie.KeyEvent})
  - Sharpie.KeySequenceResolver.SpecialCharacterResolver(System.Collections.Generic.IReadOnlyList{Sharpie.KeyEvent})
  langs:
  - csharp
  - vb
  name: KeySequenceResolver
  nameWithType: KeySequenceResolver
  fullName: Sharpie.KeySequenceResolver
  type: Class
  source:
    remote:
      path: Sharpie/KeySequenceResolver.cs
      branch: docs-project
      repo: https://github.com/LyndonGingerich/sharpie.git
    id: KeySequenceResolver
    path: Sharpie/KeySequenceResolver.cs
    startLine: 45
  assemblies:
  - sharpie
  namespace: Sharpie
  summary: Contains the definitions and implementations of input middlewares.
  example: []
  syntax:
    content: public static class KeySequenceResolver
    content.vb: Public Module KeySequenceResolver
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Sharpie.KeySequenceResolver.SpecialCharacterResolver(System.Collections.Generic.IReadOnlyList{Sharpie.KeyEvent})
  commentId: M:Sharpie.KeySequenceResolver.SpecialCharacterResolver(System.Collections.Generic.IReadOnlyList{Sharpie.KeyEvent})
  id: SpecialCharacterResolver(System.Collections.Generic.IReadOnlyList{Sharpie.KeyEvent})
  parent: Sharpie.KeySequenceResolver
  langs:
  - csharp
  - vb
  name: SpecialCharacterResolver(IReadOnlyList<KeyEvent>)
  nameWithType: KeySequenceResolver.SpecialCharacterResolver(IReadOnlyList<KeyEvent>)
  fullName: Sharpie.KeySequenceResolver.SpecialCharacterResolver(System.Collections.Generic.IReadOnlyList<Sharpie.KeyEvent>)
  type: Method
  source:
    remote:
      path: Sharpie/KeySequenceResolver.cs
      branch: docs-project
      repo: https://github.com/LyndonGingerich/sharpie.git
    id: SpecialCharacterResolver
    path: Sharpie/KeySequenceResolver.cs
    startLine: 71
  assemblies:
  - sharpie
  namespace: Sharpie
  summary: Special character resolver middleware.
  remarks: This middleware converts key such as \n, \t, escape and etc. to their key representations.
  example: []
  syntax:
    content: public static (KeyEvent? key, int count) SpecialCharacterResolver(IReadOnlyList<KeyEvent> sequence)
    parameters:
    - id: sequence
      type: System.Collections.Generic.IReadOnlyList{Sharpie.KeyEvent}
      description: The input sequence.
    return:
      type: System.ValueTuple{Sharpie.KeyEvent,System.Int32}
      description: >-
        The resolved key (if any) and the number of input events resolved.

        If the count is <code>-1</code> it means nothing matches.
    content.vb: Public Shared Function SpecialCharacterResolver(sequence As IReadOnlyList(Of KeyEvent)) As (key As KeyEvent, count As Integer)
  overload: Sharpie.KeySequenceResolver.SpecialCharacterResolver*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">sequence</code> is <code>null</code>.
  nameWithType.vb: KeySequenceResolver.SpecialCharacterResolver(IReadOnlyList(Of KeyEvent))
  fullName.vb: Sharpie.KeySequenceResolver.SpecialCharacterResolver(System.Collections.Generic.IReadOnlyList(Of Sharpie.KeyEvent))
  name.vb: SpecialCharacterResolver(IReadOnlyList(Of KeyEvent))
- uid: Sharpie.KeySequenceResolver.ControlKeyResolver(System.Collections.Generic.IReadOnlyList{Sharpie.KeyEvent})
  commentId: M:Sharpie.KeySequenceResolver.ControlKeyResolver(System.Collections.Generic.IReadOnlyList{Sharpie.KeyEvent})
  id: ControlKeyResolver(System.Collections.Generic.IReadOnlyList{Sharpie.KeyEvent})
  parent: Sharpie.KeySequenceResolver
  langs:
  - csharp
  - vb
  name: ControlKeyResolver(IReadOnlyList<KeyEvent>)
  nameWithType: KeySequenceResolver.ControlKeyResolver(IReadOnlyList<KeyEvent>)
  fullName: Sharpie.KeySequenceResolver.ControlKeyResolver(System.Collections.Generic.IReadOnlyList<Sharpie.KeyEvent>)
  type: Method
  source:
    remote:
      path: Sharpie/KeySequenceResolver.cs
      branch: docs-project
      repo: https://github.com/LyndonGingerich/sharpie.git
    id: ControlKeyResolver
    path: Sharpie/KeySequenceResolver.cs
    startLine: 107
  assemblies:
  - sharpie
  namespace: Sharpie
  summary: Control+character resolver middleware.
  remarks: This middleware converts characters in the form of CTRL+.. to proper keys.
  example: []
  syntax:
    content: public static (KeyEvent? key, int count) ControlKeyResolver(IReadOnlyList<KeyEvent> sequence)
    parameters:
    - id: sequence
      type: System.Collections.Generic.IReadOnlyList{Sharpie.KeyEvent}
      description: The input sequence.
    return:
      type: System.ValueTuple{Sharpie.KeyEvent,System.Int32}
      description: >-
        The resolved key (if any) and the number of input events resolved.

        If the count is <code>-1</code> it means nothing matches.
    content.vb: Public Shared Function ControlKeyResolver(sequence As IReadOnlyList(Of KeyEvent)) As (key As KeyEvent, count As Integer)
  overload: Sharpie.KeySequenceResolver.ControlKeyResolver*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">sequence</code> is <code>null</code>.
  nameWithType.vb: KeySequenceResolver.ControlKeyResolver(IReadOnlyList(Of KeyEvent))
  fullName.vb: Sharpie.KeySequenceResolver.ControlKeyResolver(System.Collections.Generic.IReadOnlyList(Of Sharpie.KeyEvent))
  name.vb: ControlKeyResolver(IReadOnlyList(Of KeyEvent))
- uid: Sharpie.KeySequenceResolver.AltKeyResolver(System.Collections.Generic.IReadOnlyList{Sharpie.KeyEvent})
  commentId: M:Sharpie.KeySequenceResolver.AltKeyResolver(System.Collections.Generic.IReadOnlyList{Sharpie.KeyEvent})
  id: AltKeyResolver(System.Collections.Generic.IReadOnlyList{Sharpie.KeyEvent})
  parent: Sharpie.KeySequenceResolver
  langs:
  - csharp
  - vb
  name: AltKeyResolver(IReadOnlyList<KeyEvent>)
  nameWithType: KeySequenceResolver.AltKeyResolver(IReadOnlyList<KeyEvent>)
  fullName: Sharpie.KeySequenceResolver.AltKeyResolver(System.Collections.Generic.IReadOnlyList<Sharpie.KeyEvent>)
  type: Method
  source:
    remote:
      path: Sharpie/KeySequenceResolver.cs
      branch: docs-project
      repo: https://github.com/LyndonGingerich/sharpie.git
    id: AltKeyResolver
    path: Sharpie/KeySequenceResolver.cs
    startLine: 137
  assemblies:
  - sharpie
  namespace: Sharpie
  summary: Alt+character/key resolver middleware.
  remarks: This middleware converts characters in the form of ALT+.. to proper keys.
  example: []
  syntax:
    content: public static (KeyEvent? key, int count) AltKeyResolver(IReadOnlyList<KeyEvent> sequence)
    parameters:
    - id: sequence
      type: System.Collections.Generic.IReadOnlyList{Sharpie.KeyEvent}
      description: The input sequence.
    return:
      type: System.ValueTuple{Sharpie.KeyEvent,System.Int32}
      description: >-
        The resolved key (if any) and the number of input events resolved.

        If the count is <code>-1</code> it means nothing matches.
    content.vb: Public Shared Function AltKeyResolver(sequence As IReadOnlyList(Of KeyEvent)) As (key As KeyEvent, count As Integer)
  overload: Sharpie.KeySequenceResolver.AltKeyResolver*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">sequence</code> is <code>null</code>.
  nameWithType.vb: KeySequenceResolver.AltKeyResolver(IReadOnlyList(Of KeyEvent))
  fullName.vb: Sharpie.KeySequenceResolver.AltKeyResolver(System.Collections.Generic.IReadOnlyList(Of Sharpie.KeyEvent))
  name.vb: AltKeyResolver(IReadOnlyList(Of KeyEvent))
- uid: Sharpie.KeySequenceResolver.KeyPadModifiersResolver(System.Collections.Generic.IReadOnlyList{Sharpie.KeyEvent})
  commentId: M:Sharpie.KeySequenceResolver.KeyPadModifiersResolver(System.Collections.Generic.IReadOnlyList{Sharpie.KeyEvent})
  id: KeyPadModifiersResolver(System.Collections.Generic.IReadOnlyList{Sharpie.KeyEvent})
  parent: Sharpie.KeySequenceResolver
  langs:
  - csharp
  - vb
  name: KeyPadModifiersResolver(IReadOnlyList<KeyEvent>)
  nameWithType: KeySequenceResolver.KeyPadModifiersResolver(IReadOnlyList<KeyEvent>)
  fullName: Sharpie.KeySequenceResolver.KeyPadModifiersResolver(System.Collections.Generic.IReadOnlyList<Sharpie.KeyEvent>)
  type: Method
  source:
    remote:
      path: Sharpie/KeySequenceResolver.cs
      branch: docs-project
      repo: https://github.com/LyndonGingerich/sharpie.git
    id: KeyPadModifiersResolver
    path: Sharpie/KeySequenceResolver.cs
    startLine: 183
  assemblies:
  - sharpie
  namespace: Sharpie
  summary: Complex keypad resolver middleware.
  remarks: This middleware converts complex sequences such as CTRL/SHIFT/ALT+KeyPad to proper key representations.
  example: []
  syntax:
    content: public static (KeyEvent? key, int count) KeyPadModifiersResolver(IReadOnlyList<KeyEvent> sequence)
    parameters:
    - id: sequence
      type: System.Collections.Generic.IReadOnlyList{Sharpie.KeyEvent}
      description: The input sequence.
    return:
      type: System.ValueTuple{Sharpie.KeyEvent,System.Int32}
      description: >-
        The resolved key (if any) and the number of input events resolved.

        If the count is <code>-1</code> it means nothing matches.
    content.vb: Public Shared Function KeyPadModifiersResolver(sequence As IReadOnlyList(Of KeyEvent)) As (key As KeyEvent, count As Integer)
  overload: Sharpie.KeySequenceResolver.KeyPadModifiersResolver*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">sequence</code> is <code>null</code>.
  nameWithType.vb: KeySequenceResolver.KeyPadModifiersResolver(IReadOnlyList(Of KeyEvent))
  fullName.vb: Sharpie.KeySequenceResolver.KeyPadModifiersResolver(System.Collections.Generic.IReadOnlyList(Of Sharpie.KeyEvent))
  name.vb: KeyPadModifiersResolver(IReadOnlyList(Of KeyEvent))
references:
- uid: Sharpie
  commentId: N:Sharpie
  href: Sharpie.html
  name: Sharpie
  nameWithType: Sharpie
  fullName: Sharpie
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: Sharpie.KeySequenceResolver.SpecialCharacterResolver*
  commentId: Overload:Sharpie.KeySequenceResolver.SpecialCharacterResolver
  href: Sharpie.KeySequenceResolver.html#Sharpie_KeySequenceResolver_SpecialCharacterResolver_System_Collections_Generic_IReadOnlyList_Sharpie_KeyEvent__
  name: SpecialCharacterResolver
  nameWithType: KeySequenceResolver.SpecialCharacterResolver
  fullName: Sharpie.KeySequenceResolver.SpecialCharacterResolver
- uid: System.Collections.Generic.IReadOnlyList{Sharpie.KeyEvent}
  commentId: T:System.Collections.Generic.IReadOnlyList{Sharpie.KeyEvent}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<KeyEvent>
  nameWithType: IReadOnlyList<KeyEvent>
  fullName: System.Collections.Generic.IReadOnlyList<Sharpie.KeyEvent>
  nameWithType.vb: IReadOnlyList(Of KeyEvent)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Sharpie.KeyEvent)
  name.vb: IReadOnlyList(Of KeyEvent)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Sharpie.KeyEvent
    name: KeyEvent
    href: Sharpie.KeyEvent.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sharpie.KeyEvent
    name: KeyEvent
    href: Sharpie.KeyEvent.html
  - name: )
- uid: System.ValueTuple{Sharpie.KeyEvent,System.Int32}
  commentId: T:System.ValueTuple{Sharpie.KeyEvent,System.Int32}
  parent: System
  definition: System.ValueTuple`2
  href: Sharpie.KeyEvent.html
  name: (KeyEvent key, int count)
  nameWithType: (KeyEvent key, int count)
  fullName: (Sharpie.KeyEvent key, int count)
  nameWithType.vb: (key As KeyEvent, count As Integer)
  fullName.vb: (key As Sharpie.KeyEvent, count As Integer)
  name.vb: (key As KeyEvent, count As Integer)
  spec.csharp:
  - name: (
  - uid: Sharpie.KeyEvent
    name: KeyEvent
    href: Sharpie.KeyEvent.html
  - name: " "
  - uid: System.ValueTuple{Sharpie.KeyEvent,System.Int32}.key
    name: key
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-sharpie.keyevent,system.int32-.key
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{Sharpie.KeyEvent,System.Int32}.count
    name: count
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-sharpie.keyevent,system.int32-.count
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{Sharpie.KeyEvent,System.Int32}.key
    name: key
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-sharpie.keyevent,system.int32-.key
  - name: " "
  - name: As
  - name: " "
  - uid: Sharpie.KeyEvent
    name: KeyEvent
    href: Sharpie.KeyEvent.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{Sharpie.KeyEvent,System.Int32}.count
    name: count
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-sharpie.keyevent,system.int32-.count
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: Sharpie.KeySequenceResolver.ControlKeyResolver*
  commentId: Overload:Sharpie.KeySequenceResolver.ControlKeyResolver
  href: Sharpie.KeySequenceResolver.html#Sharpie_KeySequenceResolver_ControlKeyResolver_System_Collections_Generic_IReadOnlyList_Sharpie_KeyEvent__
  name: ControlKeyResolver
  nameWithType: KeySequenceResolver.ControlKeyResolver
  fullName: Sharpie.KeySequenceResolver.ControlKeyResolver
- uid: Sharpie.KeySequenceResolver.AltKeyResolver*
  commentId: Overload:Sharpie.KeySequenceResolver.AltKeyResolver
  href: Sharpie.KeySequenceResolver.html#Sharpie_KeySequenceResolver_AltKeyResolver_System_Collections_Generic_IReadOnlyList_Sharpie_KeyEvent__
  name: AltKeyResolver
  nameWithType: KeySequenceResolver.AltKeyResolver
  fullName: Sharpie.KeySequenceResolver.AltKeyResolver
- uid: Sharpie.KeySequenceResolver.KeyPadModifiersResolver*
  commentId: Overload:Sharpie.KeySequenceResolver.KeyPadModifiersResolver
  href: Sharpie.KeySequenceResolver.html#Sharpie_KeySequenceResolver_KeyPadModifiersResolver_System_Collections_Generic_IReadOnlyList_Sharpie_KeyEvent__
  name: KeyPadModifiersResolver
  nameWithType: KeySequenceResolver.KeyPadModifiersResolver
  fullName: Sharpie.KeySequenceResolver.KeyPadModifiersResolver
