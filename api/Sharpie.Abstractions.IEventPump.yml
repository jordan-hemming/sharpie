### YamlMime:ManagedReference
items:
- uid: Sharpie.Abstractions.IEventPump
  commentId: T:Sharpie.Abstractions.IEventPump
  id: IEventPump
  parent: Sharpie.Abstractions
  children:
  - Sharpie.Abstractions.IEventPump.Listen
  - Sharpie.Abstractions.IEventPump.Listen(Sharpie.Abstractions.ISurface)
  - Sharpie.Abstractions.IEventPump.Listen(Sharpie.Abstractions.ISurface,System.Threading.CancellationToken)
  - Sharpie.Abstractions.IEventPump.Listen(System.Threading.CancellationToken)
  - Sharpie.Abstractions.IEventPump.Terminal
  - Sharpie.Abstractions.IEventPump.Use(Sharpie.ResolveEscapeSequenceFunc)
  - Sharpie.Abstractions.IEventPump.Uses(Sharpie.ResolveEscapeSequenceFunc)
  langs:
  - csharp
  - vb
  name: IEventPump
  nameWithType: IEventPump
  fullName: Sharpie.Abstractions.IEventPump
  type: Interface
  source:
    remote:
      path: Sharpie/Abstractions/IEventPump.cs
      branch: docs-project
      repo: https://github.com/LyndonGingerich/sharpie.git
    id: IEventPump
    path: Sharpie/Abstractions/IEventPump.cs
    startLine: 35
  assemblies:
  - sharpie
  namespace: Sharpie.Abstractions
  summary: Defines the traits needed to implement <xref href="Sharpie.EventPump" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public interface IEventPump
    content.vb: >-
      <PublicAPI>

      Public Interface IEventPump
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Sharpie.Abstractions.IEventPump.Terminal
  commentId: P:Sharpie.Abstractions.IEventPump.Terminal
  id: Terminal
  parent: Sharpie.Abstractions.IEventPump
  langs:
  - csharp
  - vb
  name: Terminal
  nameWithType: IEventPump.Terminal
  fullName: Sharpie.Abstractions.IEventPump.Terminal
  type: Property
  source:
    remote:
      path: Sharpie/Abstractions/IEventPump.cs
      branch: docs-project
      repo: https://github.com/LyndonGingerich/sharpie.git
    id: Terminal
    path: Sharpie/Abstractions/IEventPump.cs
    startLine: 41
  assemblies:
  - sharpie
  namespace: Sharpie.Abstractions
  summary: The terminal this pump belongs to.
  example: []
  syntax:
    content: ITerminal Terminal { get; }
    parameters: []
    return:
      type: Sharpie.Abstractions.ITerminal
    content.vb: ReadOnly Property Terminal As ITerminal
  overload: Sharpie.Abstractions.IEventPump.Terminal*
- uid: Sharpie.Abstractions.IEventPump.Listen(Sharpie.Abstractions.ISurface,System.Threading.CancellationToken)
  commentId: M:Sharpie.Abstractions.IEventPump.Listen(Sharpie.Abstractions.ISurface,System.Threading.CancellationToken)
  id: Listen(Sharpie.Abstractions.ISurface,System.Threading.CancellationToken)
  parent: Sharpie.Abstractions.IEventPump
  langs:
  - csharp
  - vb
  name: Listen(ISurface, CancellationToken)
  nameWithType: IEventPump.Listen(ISurface, CancellationToken)
  fullName: Sharpie.Abstractions.IEventPump.Listen(Sharpie.Abstractions.ISurface, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Sharpie/Abstractions/IEventPump.cs
      branch: docs-project
      repo: https://github.com/LyndonGingerich/sharpie.git
    id: Listen
    path: Sharpie/Abstractions/IEventPump.cs
    startLine: 55
  assemblies:
  - sharpie
  namespace: Sharpie.Abstractions
  summary: Gets an enumerable that is used to get enumerate events from Curses as they are generated.
  remarks: This operation is not thread safe.
  example: []
  syntax:
    content: IEnumerable<Event> Listen(ISurface surface, CancellationToken cancellationToken)
    parameters:
    - id: surface
      type: Sharpie.Abstractions.ISurface
      description: The surface to refresh during event processing.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token used to interrupt the process.
    return:
      type: System.Collections.Generic.IEnumerable{Sharpie.Event}
      description: The event listening enumerable.
    content.vb: Function Listen(surface As ISurface, cancellationToken As CancellationToken) As IEnumerable(Of [Event])
  overload: Sharpie.Abstractions.IEventPump.Listen*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">surface</code> is <code>null</code>.
  - type: Sharpie.CursesSynchronizationException
    commentId: T:Sharpie.CursesSynchronizationException
    description: >-
      Thrown if this operation was expected to run on the main

      thread/context but wasn't.
- uid: Sharpie.Abstractions.IEventPump.Listen(Sharpie.Abstractions.ISurface)
  commentId: M:Sharpie.Abstractions.IEventPump.Listen(Sharpie.Abstractions.ISurface)
  id: Listen(Sharpie.Abstractions.ISurface)
  parent: Sharpie.Abstractions.IEventPump
  langs:
  - csharp
  - vb
  name: Listen(ISurface)
  nameWithType: IEventPump.Listen(ISurface)
  fullName: Sharpie.Abstractions.IEventPump.Listen(Sharpie.Abstractions.ISurface)
  type: Method
  source:
    remote:
      path: Sharpie/Abstractions/IEventPump.cs
      branch: docs-project
      repo: https://github.com/LyndonGingerich/sharpie.git
    id: Listen
    path: Sharpie/Abstractions/IEventPump.cs
    startLine: 68
  assemblies:
  - sharpie
  namespace: Sharpie.Abstractions
  summary: Gets an enumerable that is used to get enumerate events from Curses as they are generated.
  remarks: This operation is not thread safe.
  example: []
  syntax:
    content: IEnumerable<Event> Listen(ISurface surface)
    parameters:
    - id: surface
      type: Sharpie.Abstractions.ISurface
      description: The surface to refresh during event processing.
    return:
      type: System.Collections.Generic.IEnumerable{Sharpie.Event}
      description: The event listening enumerable.
    content.vb: Function Listen(surface As ISurface) As IEnumerable(Of [Event])
  overload: Sharpie.Abstractions.IEventPump.Listen*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">surface</code> is <code>null</code>.
  - type: Sharpie.CursesSynchronizationException
    commentId: T:Sharpie.CursesSynchronizationException
    description: >-
      Thrown if this operation was expected to run on the main

      thread/context but wasn't.
- uid: Sharpie.Abstractions.IEventPump.Listen(System.Threading.CancellationToken)
  commentId: M:Sharpie.Abstractions.IEventPump.Listen(System.Threading.CancellationToken)
  id: Listen(System.Threading.CancellationToken)
  parent: Sharpie.Abstractions.IEventPump
  langs:
  - csharp
  - vb
  name: Listen(CancellationToken)
  nameWithType: IEventPump.Listen(CancellationToken)
  fullName: Sharpie.Abstractions.IEventPump.Listen(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: Sharpie/Abstractions/IEventPump.cs
      branch: docs-project
      repo: https://github.com/LyndonGingerich/sharpie.git
    id: Listen
    path: Sharpie/Abstractions/IEventPump.cs
    startLine: 80
  assemblies:
  - sharpie
  namespace: Sharpie.Abstractions
  summary: Gets an enumerable that is used to get enumerate events from Curses as they are generated.
  remarks: This operation is not thread safe.
  example: []
  syntax:
    content: IEnumerable<Event> Listen(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token used to interrupt the process.
    return:
      type: System.Collections.Generic.IEnumerable{Sharpie.Event}
      description: The event listening enumerable.
    content.vb: Function Listen(cancellationToken As CancellationToken) As IEnumerable(Of [Event])
  overload: Sharpie.Abstractions.IEventPump.Listen*
  exceptions:
  - type: Sharpie.CursesSynchronizationException
    commentId: T:Sharpie.CursesSynchronizationException
    description: >-
      Thrown if this operation was expected to run on the main

      thread/context but wasn't.
- uid: Sharpie.Abstractions.IEventPump.Listen
  commentId: M:Sharpie.Abstractions.IEventPump.Listen
  id: Listen
  parent: Sharpie.Abstractions.IEventPump
  langs:
  - csharp
  - vb
  name: Listen()
  nameWithType: IEventPump.Listen()
  fullName: Sharpie.Abstractions.IEventPump.Listen()
  type: Method
  source:
    remote:
      path: Sharpie/Abstractions/IEventPump.cs
      branch: docs-project
      repo: https://github.com/LyndonGingerich/sharpie.git
    id: Listen
    path: Sharpie/Abstractions/IEventPump.cs
    startLine: 91
  assemblies:
  - sharpie
  namespace: Sharpie.Abstractions
  summary: Gets an enumerable that is used to get enumerate events from Curses as they are generated.
  remarks: This operation is not thread safe.
  example: []
  syntax:
    content: IEnumerable<Event> Listen()
    return:
      type: System.Collections.Generic.IEnumerable{Sharpie.Event}
      description: The event listening enumerable.
    content.vb: Function Listen() As IEnumerable(Of [Event])
  overload: Sharpie.Abstractions.IEventPump.Listen*
  exceptions:
  - type: Sharpie.CursesSynchronizationException
    commentId: T:Sharpie.CursesSynchronizationException
    description: >-
      Thrown if this operation was expected to run on the main

      thread/context but wasn't.
- uid: Sharpie.Abstractions.IEventPump.Use(Sharpie.ResolveEscapeSequenceFunc)
  commentId: M:Sharpie.Abstractions.IEventPump.Use(Sharpie.ResolveEscapeSequenceFunc)
  id: Use(Sharpie.ResolveEscapeSequenceFunc)
  parent: Sharpie.Abstractions.IEventPump
  langs:
  - csharp
  - vb
  name: Use(ResolveEscapeSequenceFunc)
  nameWithType: IEventPump.Use(ResolveEscapeSequenceFunc)
  fullName: Sharpie.Abstractions.IEventPump.Use(Sharpie.ResolveEscapeSequenceFunc)
  type: Method
  source:
    remote:
      path: Sharpie/Abstractions/IEventPump.cs
      branch: docs-project
      repo: https://github.com/LyndonGingerich/sharpie.git
    id: Use
    path: Sharpie/Abstractions/IEventPump.cs
    startLine: 103
  assemblies:
  - sharpie
  namespace: Sharpie.Abstractions
  summary: Registers a key sequence resolver into the input pipeline.
  remarks: This operation is not thread safe.
  example: []
  syntax:
    content: void Use(ResolveEscapeSequenceFunc resolver)
    parameters:
    - id: resolver
      type: Sharpie.ResolveEscapeSequenceFunc
      description: The resolver to register.
    content.vb: Sub Use(resolver As ResolveEscapeSequenceFunc)
  overload: Sharpie.Abstractions.IEventPump.Use*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown is <code class="paramref">resolver</code> is <code>null</code>.
  - type: Sharpie.CursesSynchronizationException
    commentId: T:Sharpie.CursesSynchronizationException
    description: >-
      Thrown if this operation was expected to run on the main

      thread/context but wasn't.
- uid: Sharpie.Abstractions.IEventPump.Uses(Sharpie.ResolveEscapeSequenceFunc)
  commentId: M:Sharpie.Abstractions.IEventPump.Uses(Sharpie.ResolveEscapeSequenceFunc)
  id: Uses(Sharpie.ResolveEscapeSequenceFunc)
  parent: Sharpie.Abstractions.IEventPump
  langs:
  - csharp
  - vb
  name: Uses(ResolveEscapeSequenceFunc)
  nameWithType: IEventPump.Uses(ResolveEscapeSequenceFunc)
  fullName: Sharpie.Abstractions.IEventPump.Uses(Sharpie.ResolveEscapeSequenceFunc)
  type: Method
  source:
    remote:
      path: Sharpie/Abstractions/IEventPump.cs
      branch: docs-project
      repo: https://github.com/LyndonGingerich/sharpie.git
    id: Uses
    path: Sharpie/Abstractions/IEventPump.cs
    startLine: 116
  assemblies:
  - sharpie
  namespace: Sharpie.Abstractions
  summary: Checks if the screen has a given key sequence resolver registered.
  remarks: This operation is not thread safe.
  example: []
  syntax:
    content: bool Uses(ResolveEscapeSequenceFunc resolver)
    parameters:
    - id: resolver
      type: Sharpie.ResolveEscapeSequenceFunc
      description: The resolver to check.
    return:
      type: System.Boolean
      description: <code>true</code> if the resolver is registered; <code>false</code> otherwise.
    content.vb: Function Uses(resolver As ResolveEscapeSequenceFunc) As Boolean
  overload: Sharpie.Abstractions.IEventPump.Uses*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown is <code class="paramref">resolver</code> is <code>null</code>.
  - type: Sharpie.CursesSynchronizationException
    commentId: T:Sharpie.CursesSynchronizationException
    description: >-
      Thrown if this operation was expected to run on the main

      thread/context but wasn't.
references:
- uid: Sharpie.EventPump
  commentId: T:Sharpie.EventPump
  parent: Sharpie
  href: Sharpie.EventPump.html
  name: EventPump
  nameWithType: EventPump
  fullName: Sharpie.EventPump
- uid: Sharpie.Abstractions
  commentId: N:Sharpie.Abstractions
  href: Sharpie.html
  name: Sharpie.Abstractions
  nameWithType: Sharpie.Abstractions
  fullName: Sharpie.Abstractions
  spec.csharp:
  - uid: Sharpie
    name: Sharpie
    href: Sharpie.html
  - name: .
  - uid: Sharpie.Abstractions
    name: Abstractions
    href: Sharpie.Abstractions.html
  spec.vb:
  - uid: Sharpie
    name: Sharpie
    href: Sharpie.html
  - name: .
  - uid: Sharpie.Abstractions
    name: Abstractions
    href: Sharpie.Abstractions.html
- uid: Sharpie
  commentId: N:Sharpie
  href: Sharpie.html
  name: Sharpie
  nameWithType: Sharpie
  fullName: Sharpie
- uid: Sharpie.Abstractions.IEventPump.Terminal*
  commentId: Overload:Sharpie.Abstractions.IEventPump.Terminal
  href: Sharpie.Abstractions.IEventPump.html#Sharpie_Abstractions_IEventPump_Terminal
  name: Terminal
  nameWithType: IEventPump.Terminal
  fullName: Sharpie.Abstractions.IEventPump.Terminal
- uid: Sharpie.Abstractions.ITerminal
  commentId: T:Sharpie.Abstractions.ITerminal
  parent: Sharpie.Abstractions
  href: Sharpie.Abstractions.ITerminal.html
  name: ITerminal
  nameWithType: ITerminal
  fullName: Sharpie.Abstractions.ITerminal
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: Sharpie.CursesSynchronizationException
  commentId: T:Sharpie.CursesSynchronizationException
  href: Sharpie.CursesSynchronizationException.html
  name: CursesSynchronizationException
  nameWithType: CursesSynchronizationException
  fullName: Sharpie.CursesSynchronizationException
- uid: Sharpie.Abstractions.IEventPump.Listen*
  commentId: Overload:Sharpie.Abstractions.IEventPump.Listen
  href: Sharpie.Abstractions.IEventPump.html#Sharpie_Abstractions_IEventPump_Listen_Sharpie_Abstractions_ISurface_System_Threading_CancellationToken_
  name: Listen
  nameWithType: IEventPump.Listen
  fullName: Sharpie.Abstractions.IEventPump.Listen
- uid: Sharpie.Abstractions.ISurface
  commentId: T:Sharpie.Abstractions.ISurface
  parent: Sharpie.Abstractions
  href: Sharpie.Abstractions.ISurface.html
  name: ISurface
  nameWithType: ISurface
  fullName: Sharpie.Abstractions.ISurface
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Collections.Generic.IEnumerable{Sharpie.Event}
  commentId: T:System.Collections.Generic.IEnumerable{Sharpie.Event}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Event>
  nameWithType: IEnumerable<Event>
  fullName: System.Collections.Generic.IEnumerable<Sharpie.Event>
  nameWithType.vb: IEnumerable(Of Event)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Sharpie.Event)
  name.vb: IEnumerable(Of Event)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Sharpie.Event
    name: Event
    href: Sharpie.Event.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Sharpie.Event
    name: Event
    href: Sharpie.Event.html
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Sharpie.Abstractions.IEventPump.Use*
  commentId: Overload:Sharpie.Abstractions.IEventPump.Use
  href: Sharpie.Abstractions.IEventPump.html#Sharpie_Abstractions_IEventPump_Use_Sharpie_ResolveEscapeSequenceFunc_
  name: Use
  nameWithType: IEventPump.Use
  fullName: Sharpie.Abstractions.IEventPump.Use
- uid: Sharpie.ResolveEscapeSequenceFunc
  commentId: T:Sharpie.ResolveEscapeSequenceFunc
  parent: Sharpie
  href: Sharpie.ResolveEscapeSequenceFunc.html
  name: ResolveEscapeSequenceFunc
  nameWithType: ResolveEscapeSequenceFunc
  fullName: Sharpie.ResolveEscapeSequenceFunc
- uid: Sharpie.Abstractions.IEventPump.Uses*
  commentId: Overload:Sharpie.Abstractions.IEventPump.Uses
  href: Sharpie.Abstractions.IEventPump.html#Sharpie_Abstractions_IEventPump_Uses_Sharpie_ResolveEscapeSequenceFunc_
  name: Uses
  nameWithType: IEventPump.Uses
  fullName: Sharpie.Abstractions.IEventPump.Uses
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
