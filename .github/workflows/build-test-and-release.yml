# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build, Test and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [ "main" ]

jobs:
  build-test-deploy:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest

    steps:
    - name: Checkout 
      uses: actions/checkout@v3
    
    - name: Check Version
      run: |
        V1=`cat Sharpie/Sharpie.csproj | sed -n "s/\s*<FileVersion>\(.*\)<\/FileVersion>$/\1/p"`
        V2=`cat Sharpie/Sharpie.csproj | sed -n "s/\s*<AssemblyVersion>\(.*\)<\/AssemblyVersion>$/\1/p"`
        V3=`cat Sharpie/Sharpie.csproj | sed -n "s/\s*<PackageVersion>\(.*\)<\/PackageVersion>$/\1/p"`
        if [ "$V1" != "$V2" ] || [ "$V2" != "$V3" ]; then exit 1; fi
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
      
    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage/**/coverage.cobertura.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '95 99'

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        GITHUB_TOKEN: ${{ secrets.PAT }}
        recreate: true
        path: code-coverage-results.md
        
    - name: Build NuGet Package
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: dotnet pack ./Sharpie/Sharpie.csproj 
      
    - name: Push to NuGet.org
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: dotnet nuget push **/sharpie-curses.*.nupkg -k ${{ secrets.NUGET_ORG_API_KEY }} -s https://api.nuget.org/v3/index.json
      
